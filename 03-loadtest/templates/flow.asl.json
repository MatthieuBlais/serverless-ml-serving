{
    "StartAt": "Generate jobs",
    "States": {
        "Generate jobs": {
            "Type": "Task",
            "Resource": "arn:aws:lambda:::function:ml-loadtesting-initialize",
            "Catch":[
                {
                    "ErrorEquals": ["States.ALL"],
                    "ResultPath": "$.Error",
                    "Next": "Fail"
                }
            ],
            "Next": "Load Testing Analysis"
        },
        "Load Testing Analysis": {
            "Type": "Map",
            "ItemsPath": "$.Jobs",
            "MaxConcurrency": 0,
            "Iterator": {
              "StartAt": "Rate Limit Handling",
              "States": {
                "Rate Limit Handling": {
                    "Type": "Wait",
                    "SecondsPath": "$.WaitLimit",
                    "Next": "Create Endpoint Config"
                },
                "Create Endpoint Config": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::sagemaker:createEndpointConfig",
                    "Parameters":{
                      "EndpointConfigName.$": "$.EndpointName",
                      "ProductionVariants": [ 
                        { 
                          "InitialInstanceCount": "$.InstanceCount",
                          "InstanceType.$": "$.InstanceType",
                          "ModelName.$": "$.ModelName",
                          "VariantName.$": "$.VariantName"
                        }
                      ]
                    },
                    "ResultPath": null,
                    "Next":"Create Endpoint"
                },
                "Create Endpoint":{
                    "Type":"Task",
                    "Resource":"arn:aws:states:::sagemaker:createEndpoint",
                    "Parameters":{
                      "EndpointConfigName.$": "$.EndpointName",
                      "EndpointName.$": "$.EndpointName"
                    },
                    "ResultPath": null,
                    "Next": "Get endpoint status"
                },
                "Get endpoint status":{
                    "Type": "Task",
                    "Resource": "arn:aws:lambda:::function:ml-serving-status",
                    "Next": "If Endpoint Ready"
                },
                "If Endpoint Ready": {
                  "Type": "Choice",
                  "Choices": [
                    {
                      "Variable": "$.EndpointStatus",
                      "StringEquals": "InService",
                      "Next": "Create Scaling Policy"
                    }
                  ],
                  "Default": "Wait 20s"
                },
                "Wait 20s": {
                  "Type": "Wait",
                  "Seconds": 20,
                  "Next": "Get endpoint status"
                },
                "Create Scaling Policy":{
                    "Type": "Task",
                    "Resource": "arn:aws:lambda:::function:ml-serving-status",
                    "Next": "Execute Load Testing"
                },
                "Execute Load Testing": {
                    "Type": "Parallel",
                    "Next": "Clean-up",
                    "Branches": [
                      {
                       "StartAt": "Execute Master Node",
                       "States": {
                        "Execute Master Node": {
                            "Type": "Task",
                            "Resource": "arn:aws:states:::ecs:runTask.sync",
                            "Parameters": {
                                "Cluster.$": "$.JobDetails.ClusterName",
                                "LaunchType": "FARGATE",
                                "TaskDefinition.$": "$.JobDetails.TaskDefinition",
                                "Overrides": {
                                    "ContainerOverrides": [
                                        {
                                            "Name.$": "$.JobDetails.TaskName",
                                            "Command.$": "$.JobDetails.Command",
                                            "Environment": [
                                              {
                                                "Name": "AWS_REGION",
                                                "Value.$": "$.JobDetails.AwsRegion"
                                              },
                                              {
                                                "Name": "ENDPOINT_NAME",
                                                "Value.$": "$.EndpointName"
                                              },
                                              {
                                                "Name": "TEST_DATASET_BUCKET",
                                                "Value.$": "$.TestDataset.Bucket"
                                              },
                                              {
                                                "Name": "TEST_DATASET_KEY",
                                                "Value.$": "$.TestDataset.Key"
                                              }
                                            ]
                                        }
                                    ]
                                },
                                "NetworkConfiguration": {
                                    "AwsvpcConfiguration": {
                                        "Subnets.$": "$.JobDetails.Subnets",
                                        "AssignPublicIp": "ENABLED"
                                    }
                                }
                            },
                            "ResultPath": null,
                            "End": true
                          }
                       }
                     },
                     {
                       "StartAt": "Get Master status",
                       "States": {
                         "Get Master status": {
                           "Type": "Task",
                           "Resource":
                             "arn:aws:lambda:us-east-1:123456789012:function:PhoneFinder",
                           "Next": "If Master Ready"
                         },
                         "If Master Ready": {
                            "Type": "Choice",
                            "Choices": [
                              {
                                "Variable": "$.MasterStatus",
                                "StringEquals": "InService",
                                "Next": "Start Workers"
                              }
                            ],
                            "Default": "Wait For Master"
                         },
                         "Wait For Master": {
                            "Type": "Wait",
                            "Seconds": 30,
                            "Next": "Get Master status"
                          },
                          "Start Workers": {
                            "Type": "Map",
                            "ItemsPath": "$.Jobs",
                            "MaxConcurrency": 0,
                            "Iterator": {
                              "StartAt": "Start Worker",
                              "States": {
                                "Start Worker": {
                                    "Type": "Wait",
                                    "SecondsPath": "$.WaitLimit",
                                    "End": true
                                }
                              }
                            },
                            "End": true
                          }
                       }
                     }
                    ]
                },
                "Clean-up": {
                    "Type": "Task",
                    "Resource": "arn:aws:lambda:::function:ml-serving-cleanup",
                    "End": true
                }
              }
            },
            "Catch":[
                {
                    "ErrorEquals":["States.ALL"],
                    "ResultPath":"$.error",
                    "Next":"Fail"
                }
            ],
            "ResultPath": null,
            "Next": "Recommend"
        },
        "Recommend": {
            "Type": "Task",
            "Resource": "arn:aws:lambda:::function:ml-serving-recommend",
            "Next": "Success"
        },
        "Success": {
            "Type": "Succeed"
        },
        "Fail": {
            "Type": "Fail"
        }
    }
  }